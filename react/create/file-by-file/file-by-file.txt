How to create react app manually file by file?
Set Up Your Project Directory
    First, create a new directory for your React app and navigate into it.
    create a folder hrms-ui-react
    cd hrms-ui-react
--
Initialize a new Node.js Project
    Initialize a new Node.js project using npm or Yarn.   
    npm init -y
    This will create a package.json file in your project directory.
    package.json with the below content
    {
        "name": "file-by-file",
        "version": "1.0.0",
        "main": "index.js",
        "scripts": {
            "test": "echo \"Error: no test specified\" && exit 1"
        },
        "keywords": [],
        "author": "",
        "license": "ISC",
        "description": ""
    }
--
Create Your React Project Structure
    Create the following folders and files:
    my-react-app/
    │
    ├── public/
    │   └── index.html
    │
    ├── src/
    │   ├── App.js
    │   └── index.js
    │
    ├── package.json
    ├── webpack.config.js
--
Set Up Webpack Configuration
Create a webpack.config.js file in the root directory to configure Webpack.
    const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
module.exports = {
	entry: './src/index.js',
	output: {
		path: path.resolve(__dirname, 'dist'),
		filename: 'bundle.js'
	},
	module: {
		rules: [
			{
				test: /\.js|\.jsx$/,
				exclude: /node_modules/,
				use: {
					loader: 'babel-loader',
					options: {
						presets: ["@babel/preset-react", "@babel/preset-env"],
					},
				}
			}
		]
	},
	resolve: {
		extensions: ['.js', '.jsx']
	},
	plugins: [
		new HtmlWebpackPlugin({
			template: './public/index.html',
			filename: 'index.html'
		})
	],
	devServer: {
		static: {
			directory: path.join(__dirname, 'dist'),
		},
		compress: true,
		port: 3000,
	}
};
--
Set Up Babel Configuration
Create a .babelrc file in the root directory to configure Babel.
{
  "presets": ["@babel/preset-env", "@babel/preset-react"]
}
--
Create the HTML Template
Create a public/index.html file for your HTML template.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My React App</title>
</head>
<body>
  <div id="div1">
  <p>index.html file content is loaded using html tag</p>
  </div>
  <div id="div2"></div>
  <div id="div3"></div>
  <div id="div4"></div>
</body>
</html>
--
Add dependencies to package.json

"dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "@babel/core": "^7.25.2",
    "@babel/preset-env": "^7.25.4",
    "@babel/preset-react": "^7.24.7",
    "babel-loader": "^9.1.3",
    "html-webpack-plugin": "^5.6.0",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.0.4"
  }
--
Add Scripts to package.json
Modify the package.json file to add scripts for building and running your app.
"scripts": {
  "start": "webpack serve --mode development",
  "build": "webpack --mode production"
}

npm install --save
--
Run Your Application
To start your development server, run:
npm start
--
Build Your Application for Production
To build your app for production, run:
npm run build
--
Create a src/index.js file to render your React component to the DOM.

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";

(function () {
    const component = "index.js Module content";
    document.getElementById("div2").innerHTML = component;
})();

const div3  = document.getElementById('div3');
const reactDOM = ReactDOM.createRoot(div3);
reactDOM.render(<App />)
--
Create React Components
Create a src/App.js file for your main React component.

    import React from "react";
function App(){
	return (<p> App.js component is loaded from App.js file => component</p>);
}

export default App;
--