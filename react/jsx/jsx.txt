JSX is a syntax extension for JavaScript that lets you write HTML-like markup 
inside a JavaScript file. Although there are other ways to write components, 
most React developers prefer the conciseness of JSX, and most codebases use it.
You will learn
    Why React mixes markup with rendering logic
    How JSX is different from HTML
    How to display information with JSX
JSX: Putting markup into JavaScript 
The Web has been built on HTML, CSS, and JavaScript. For many years, web 
developers kept content in HTML, design in CSS, and logic in JavaScript—often 
in separate files! Content was marked up inside HTML while the page’s logic 
lived separately in JavaScript:

employee-create.html
<div>
    <P></p>
    <form></form>
</div>
employee-create.js 
    isLoggerIn() {}
    onClick() {}
    onSubmit() {}
--
But as the Web became more interactive, logic increasingly determined content. 
JavaScript was in charge of the HTML! This is why in React, rendering logic and 
markup live together in the same place—components.
Sidebar.js
Sidebar() {
    if(isLoggedIN()){
        <p>Welcome</p>
    }else {
        <Form />
    }
}
Form.js
Form() {
onClick() {}
onSubmit() {}
    <form onSubmit>
        <input onClick />
        <input onClick />
    </from>
}
Keeping a button’s rendering logic and markup together ensures that they stay  
in sync with each other on every edit. Conversely, details that are unrelated,  
such as the button’s markup and a sidebar’s markup, are isolated from each  
other, making it safer to change either of them on their own.

Each React component is a JavaScript function that may contain some markup that 
React renders into the browser. React components use a syntax extension called 
JSX to represent that markup. JSX looks a lot like HTML, but it is a bit 
stricter and can display dynamic information. The best way to understand this 
is to convert some HTML markup to JSX markup.
--
 JSX is stricter and has a few more rules than HTML! If you read the error 
 messages above, they’ll guide you to fix the markup, or you can follow the 
 guide below.
 The Rules of JSX 
1. Return a single root element
2. Close all the tags
3. camelCase all most of the things! 
4. Pro-tip: Use a JSX Converter
--
Task 01
Create a html page using JavaScript.
Task 02
Create a html page using React and JSX.
